// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.







    //Mux16(a=inc16Out , b=in , sel=load , out=load16Out );
    Mux4Way16(a=accumulator , b=in , c=false , d=false , sel[1]=reset,sel[0]=load , out=incInput );
    Or(a =reset , b =load , out =resetOrload );
    Not(in=resetOrload,out=nresetOrload);
    And(a =nresetOrload , b =inc , out =finc );
    Mux16(a=incInput , b=incMuxInput , sel=finc , out=incMuxOut );
    Register(in=incMuxOut , load=true , out=accumulator,out=out );
    Inc16(in=accumulator , out=incMuxInput );
}
