// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;


    PARTS:
    //// Replace this comment with your code.
    Not(in=sel[2] , out=nsel );
    DMux4Way(in=in , sel=sel[0..1] , a=admux , b=bdmux , c=cdmux , d=ddmux );
    DMux4Way(in=in , sel=sel[0..1] , a=edmux , b=fdmux , c=gdmux , d=hdmux );
    And(a=admux , b=nsel , out=a );
    And(a=bdmux , b=nsel , out=b );
    And(a=cdmux , b=nsel , out=c );
    And(a=ddmux , b=nsel , out=d );
    And(a=edmux , b=sel[2] , out=e );
    And(a=fdmux , b=sel[2] , out=f );
    And(a=gdmux , b=sel[2] , out=g );
    And(a=hdmux , b=sel[2] , out=h );

}
